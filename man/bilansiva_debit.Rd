% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bilansiva_debit.R
\name{bilansiva_debit}
\alias{bilansiva_debit}
\title{bilansiva-debit extraction des données de la base}
\usage{
bilansiva_debit(debut, fin, plot = FALSE)
}
\arguments{
\item{debut}{La date de début, format texte, format = "\%Y-\%m-\%d \%H:\%M:\%S".}

\item{fin}{La date de fin, format texte, format = "\%Y-\%m-\%d \%H:\%M:\%S".}

\item{plot}{Boolean défaut FALSE.}
}
\value{
Un tableau de données avec les données chargées
}
\description{
Extraction des données des volets, des vannes, le débit vilaine estimé, débit
passe (brut), le débit moyen CRAN, le volume total du barrage, de la passe,
des siphons, des volets, de l'écluse, les niveaux vilaine et mer des sondes
de la passe, et les niveaux mer et vilaine des sondes barrage.
}
\examples{
# Ne pas oublier que la bdd du barrage est en vieux GMT tout pourri.
Sys.setenv(TZ='GMT')	

# mise en place des paramètres de connexion --------------------
 # sur mon ordi j'ai des mots de passe chargés au démarrage à partir de Rprofile.site
 # Ici test si existent et si oui il faut le main password pour les decrypter, sinon il
 # faut les entrer après un prompt du programme. 
 if (interactive()){
 if (!exists("mainpass")) mainpass <- getPass::getPass(msg = "main password")
 if (!exists("hostmysql")) {
   hostmysql. <- getPass::getPass(msg = "Saisir host")
   # ci dessous pour ne pas redemander au prochain tour
   hostmysql <- encrypt_string(string = hostmysql., key = mainpass)
 } else {
   hostmysql. <- decrypt_string(string = hostmysql, key = mainpass)
 }
 if (!exists("pwdmysql")) {
   pwdmysql. <- getPass::getPass(msg = "Saisir password")
   pwdmysql <- encrypt_string(string = pwdmysql., key = mainpass)
 }  else {
   # pass should be loaded
   pwdmysql. <- decrypt_string(string = pwdmysql, key = mainpass)
 }
 if (!exists("umysql")) {
   umysql. <- getPass::getPass(msg = "Saisir user")
   umysql <- encrypt_string(string = umysql., key = mainpass)
 } else {
   umysql. <- decrypt_string(string = umysql, key = mainpass)
 }
 
 options(stacomiR.dbname="archive_IAV", # TODO not used....
         stacomiR.host = hostmysql.,
         stacomiR.password = pwdmysql.,
         stacomiR.user = umysql.,
         stacomiR.ODBClink = "archive_IAV")
 dat <- bilansiva_debit(debut="2020-01-01 00:00:00",fin="2020-01-20 00:00:00", plot =FALSE)
 knitr::kable(dat)
 rawdata2020 <- dat
 save(rawdata2020, file="inst/rawdata2020.Rdata")
 }
}
